name: Build

on:
  push:
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux, darwin ]
        goarch: [ amd64, arm64 ]
        include:
          - goos: windows
            goarch: amd64
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: '0'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          check-latest: true
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: go build -v -ldflags '-s -w -buildid=' -trimpath -o out/cosupload-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/cosupload/main

      - name: Rename for Windows
        if: matrix.goos == 'windows'
        run: mv out/cosupload-${{ matrix.goos }}-${{ matrix.goarch }} out/cosupload-${{ matrix.goos }}-${{ matrix.goarch }}.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cosupload-${{ matrix.goos }}-${{ matrix.goarch }}
          path: out/*

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3

      - name: Show files
        run: |
          pwd
          find
      - name: Calc hash
        run: |
          mkdir -p out
          cp ./cosupload-linux-amd64/cosupload-linux-amd64 ./out/
          cp ./cosupload-windows-amd64/cosupload-windows-amd64.exe ./out/
          cp ./cosupload-darwin-amd64/cosupload-darwin-amd64 ./out/
          cp ./cosupload-darwin-arm64/cosupload-darwin-arm64 ./out
          cp ./cosupload-linux-arm64/cosupload-linux-arm64 ./out
          cd out
          sha256sum * > sha256sum
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: out/*
          draft: true
